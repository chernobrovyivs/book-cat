<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAAuCAIAAABRZnwgAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADuUlEQVR4Xu3cSU8TcRzG8Xl9
        xosxKPFIjAejJnrxAEJcGhUSSNQK9GaCJCAt4QBpA7alLCoKJSxCWUuhFERE9h184nL4v4T5+Z08SdOe
        pp9JvofOpF4sFotGo88rn968daP42qXLRReKrl68UswQQAABBPwhoGgr3Qq4Mq6YK+kKu6eXiorSkuvF
        pQ9uV1aXvQg+CtYFgvUMAQQQQMAnAnUBpVsBV8YVcyVdYfeqa6ru3C15VfukuzeSyw+dna8wBBBAAAHf
        CSjgyrhirqQr7F55xX29GRjs2N6dPT0v+O77cMIIIIAAAhJQwJVxxVxJV9i98of3wm2h1bXR07MCQwAB
        BBDwtYBirqQr7F5VTVks3rh/uHByuswQQAABBHwtoJgr6Qq79/L140RP8/FpniGAAAIIGBBQ0hV2T8/G
        JPtajk/yDAEEEEDAgICSrrB7euqxu7/l6HiJIYAAAggYEFDSFfa/cT88WmQIIIAAAgYEnLgfHOUYAggg
        gIABASfuusHKEEAAAQQMCDhx3zvIMgQQQAABAwJO3Hf35xkCCCCAgAEBJ+47e3MMAQQQQMCAgBN3/SMB
        QwABBBAwIODEfWtnmiGAAAIIGBBw4r65PcUQQAABBAwIOHHf2MowBBBAAAEDAk7cf2xOMgQQQAABAwJO
        3Nd/TjAEEEAAAQMCTty/b4wzBBBAAAEDAk7c19bHGAIIIICAAQEn7qvrowwBBBBAwICAE/eVtRGGAAII
        IGBAwIl74dswQwABBBAwIODEfXk1zRBAAAEEDAg4cc+vDDEEEEAAAQMCTtwXC4MMAQQQQMCAgBP33PIX
        hgACCCBgQMCJ+0J+gCGAAAIIGBBw4p5d+sQQQAABBAwIOHGfX/zIEEAAAQQMCDhxn8t9YAgggAACBgSc
        uM8u9DMEEEAAAQMCTtxnsn0MAQQQQMCAgBP36WwvQwABBBAwIODEfWq+hyGAAAIIGBBw4p6ZSzEEEEAA
        AQMC/+JeF0j2tWRmUwwBBBBAwICAkh6sC3i1oWeJnuaJ6eTkbDdDAAEEEPC1gGKupCvs3puG2li8cXSy
        a2ImyRBAAAEEfC2gmCvpCrvX1NwQbgt9Hm4fy8S/TicYAggggIBPBZRxxVxJV9i91tbW9o5w7P1bfTQy
        0UnifXpROW0EEPifBZRuBVwZV8yVdIXdC4VC0Wg0nojFusKdyXfxVJN+jNfNVoYAAggg4AsBRVvpVsCV
        ccVcSVfYvfrfRyQSSaVS6XR6nAMBBBBAwIcCCrgyrpj/qfovwEKgK/fl05wAAAAASUVORK5CYII=
</value>
  </data>
</root>